# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main, FTR-actions]
  pull_request:
    branches: [main, FTR-actions]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Compiles the code
        run: javac -cp "src/" Projects/P1/src/*.java

  testPacmanValidMoves:
    runs-on: ubuntu-latest
    container: openjdk
    defaults:
      run:
        working-directory: Projects/P1

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Compiles the code and runs the test TestPacManValidMoves
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestPacManValidMoves

  testMapMove:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    defaults:
      run:
        working-directory: Projects/P1
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Compiles the code and runs the test
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapMove

  testGhostValidMoves:
    runs-on: ubuntu-latest
    container: openjdk
    defaults:
      run:
        working-directory: Projects/P1
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Compiles the code and runs the test TestGhostValidMoves
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestGhostValidMoves

  testPacmanConsume:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    defaults:
      run:
        working-directory: Projects/P1
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Compiles the code and runs the test
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestConsume

  testMapGetLoc:
    runs-on: ubuntu-latest
    container: openjdk
    defaults:
      run:
        working-directory: Projects/P1
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Compiles the code and runs the test TestMapGetLoc
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapGetLoc

  testGhostInRange:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    defaults:
      run:
        working-directory: Projects/P1

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Compiles the code and runs the test
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestGhostInRange

  testPacmanInRange:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    defaults:
      run:
        working-directory: Projects/P1
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: compile test1
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestPacManInRange

  testGhostMove:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    defaults:
      run:
        working-directory: Projects/P1
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: compile test2
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestGhostMove

  testMapAttack:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    defaults:
      run:
        working-directory: Projects/P1
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: compile test3
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapAttack
          
  testAttack:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    defaults:
      run:
        working-directory: Projects/P1
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Compiles the code and runs the test
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestAttack
          
  testMapEatCookie:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    defaults:
      run:
        working-directory: Projects/P1
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Compiles the code and runs the test
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapEatCookie
          
  testPacManMove:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    defaults:
      run:
        working-directory: Projects/P1
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Compiles the code and runs the test
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestPacManMove
